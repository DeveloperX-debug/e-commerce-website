# Generated by Django 5.2 on 2025-04-04 14:20

from django.db import migrations
from django.contrib.auth import get_user_model
import os

# Define the user and the NEW password
USERNAME_TO_RESET = os.environ.get('DJANGO_SUPERUSER_USERNAME', 'DeveloperX') # Usually the same user
NEW_PASSWORD = 'ResetMeNow123!' # TEMPORARY - Change immediately after login

def set_new_password(apps, schema_editor):
    User = get_user_model()
    try:
        user = User.objects.get(username=USERNAME_TO_RESET)
        user.set_password(NEW_PASSWORD)
        user.save()
        print(f'\nPassword for user {USERNAME_TO_RESET} has been reset.')
    except User.DoesNotExist:
        print(f'\nUser {USERNAME_TO_RESET} not found. Cannot reset password.')
        # Optionally, you could create the user here if they don't exist, 
        # combining with the previous migration's logic, but let's keep it simple.
        pass 

class Migration(migrations.Migration):

    dependencies = [
        ('store', '0003_create_superuser'), # Depends on the previous migration
    ]

    operations = [
        migrations.RunPython(set_new_password),
    ]
